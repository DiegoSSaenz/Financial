#Calculate Social Security
#ss <- ss_calc(income, tyw, i, n)
retire <- age + n - 2
#output$text1 <- renderText({
#  paste("Based on a savings rate of", input$savings_rate, ",",
#        "you will be able to retire at", retire, ".")
#})
while(n < end - age + 2){
assets[n] <- assets[n-1] * (1 + r) - expenses[n-1]
n <- n + 1
}
plot(years, assets, log = "", type = "l", col = "blue",
xlab = "Age", ylab = "Assets", main="Assets over Time")
abline(v=retire,col=3,lty=3)
while( n < 40){
age <- 30
s <- (60000-18000)/60000 #savings rate
end <- 65 #Life expectancy
years <- c(age:end)
income <- seq(age:end)
income[1] <- 60000 #post tax income
expenses <- seq(age:end)
expenses[1] <- income[1] * (1 -s) #expenses
assets <- seq(age:end)
assets[1] <- 0 #current investments
r <- 7 / 100 #returns
i <- 0 /100  #inflation
#tyw <- as.numeric(input$years_worked) #total years worked
n <- 2
l <- length(income)
for(k in 2:l){
income[k] <- income[k-1] * (1 + i)
expenses[k] <- income[k-1] * (1 - s)
}
while( n < 40){
assets[n] <- assets[n-1] * (1 + r) + income[n-1] * s
n <- n + 1
}
#Calculate Social Security
#ss <- ss_calc(income, tyw, i, n)
retire <- age + n - 2
#output$text1 <- renderText({
#  paste("Based on a savings rate of", input$savings_rate, ",",
#        "you will be able to retire at", retire, ".")
#})
while(n < end - age + 2){
assets[n] <- assets[n-1] * (1 + r) - expenses[n-1]
n <- n + 1
}
plot(years, assets, log = "", type = "l", col = "blue",
xlab = "Age", ylab = "Assets", main="Assets over Time")
abline(v=retire,col=3,lty=3)
age <- 30
s <- (60000-18000)/60000 #savings rate
end <- 65 #Life expectancy
years <- c(age:end)
income <- seq(age:end)
income[1] <- 60000 #post tax income
expenses <- seq(age:end)
expenses[1] <- income[1] * (1 -s) #expenses
assets <- seq(age:end)
assets[1] <- 0 #current investments
r <- 7 / 100 #returns
i <- 0 /100  #inflation
#tyw <- as.numeric(input$years_worked) #total years worked
n <- 2
l <- length(income)
for(k in 2:l){
income[k] <- income[k-1] * (1 + i)
expenses[k] <- income[k-1] * (1 - s)
}
while( n < 12){
assets[n] <- assets[n-1] * (1 + r) + income[n-1] * s
n <- n + 1
}
#Calculate Social Security
#ss <- ss_calc(income, tyw, i, n)
retire <- age + n - 2
#output$text1 <- renderText({
#  paste("Based on a savings rate of", input$savings_rate, ",",
#        "you will be able to retire at", retire, ".")
#})
while(n < end - age + 2){
assets[n] <- assets[n-1] * (1 + r) - expenses[n-1]
n <- n + 1
}
plot(years, assets, log = "", type = "l", col = "blue",
xlab = "Age", ylab = "Assets", main="Assets over Time")
abline(v=retire,col=3,lty=3)
age <- 30
s <- (60000-18000)/60000 #savings rate
end <- 65 #Life expectancy
years <- c(age:end)
income <- seq(age:end)
income[1] <- 60000 #post tax income
expenses <- seq(age:end)
expenses[1] <- income[1] * (1 -s) #expenses
assets <- seq(age:end)
assets[1] <- 0 #current investments
tradIRA <- seq(age:end)
tradIRA[1] <- 0 #initial traditional IRA
rothIRA <- seq(age:end)
rothIRA[1] <- 0 #initial Roth IRA
r <- 7 / 100 #returns
i <- 0 /100  #inflation
#tyw <- as.numeric(input$years_worked) #total years worked
n <- 2
l <- length(income)
for(k in 2:l){
income[k] <- income[k-1] * (1 + i)
expenses[k] <- income[k-1] * (1 - s)
}
while( n < 12){
assets[n] <- assets[n-1] * (1 + r) + income[n-1] * s
n <- n + 1
}
#Calculate Social Security
#ss <- ss_calc(income, tyw, i, n)
retire <- age + n - 2
#output$text1 <- renderText({
#  paste("Based on a savings rate of", input$savings_rate, ",",
#        "you will be able to retire at", retire, ".")
#})
while(n < end - age + 2){
assets[n] <- assets[n-1] * (1 + r) - expenses[n-1]
n <- n + 1
}
plot(years, assets, log = "", type = "l", col = "blue",
xlab = "Age", ylab = "Assets", main="Assets over Time")
abline(v=retire,col=3,lty=3)
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
library(ggplot)
library(ggplot2)
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
?ggplot
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
age <- 30
s <- (60000-18000)/60000 #savings rate
end <- 65 #Life expectancy
years <- c(age:end)
income <- seq(age:end)
income[1] <- 60000 #post tax income
expenses <- seq(age:end)
expenses[1] <- income[1] * (1 -s) #expenses
assets <- seq(age:end)
assets[1] <- 0 #current investments
tradIRA <- seq(age:end)
tradIRA[1] <- 0 #initial traditional IRA
rothIRA <- seq(age:end)
rothIRA[1] <- 0 #initial Roth IRA
r <- 7 / 100 #returns
i <- 0 /100  #inflation
#tyw <- as.numeric(input$years_worked) #total years worked
n <- 2
l <- length(income)
for(k in 2:l){
income[k] <- income[k-1] * (1 + i)
expenses[k] <- income[k-1] * (1 - s)
}
while( n < 12){
taxable[n] <- taxable[n-1] * (1 + r) + income -
expenses - getTotal() - maxIRA
rothIRA[n] <- rothIRA[n-1] * (1 +r) + maxIRA
n <- n + 1
}
#Calculate Social Security
#ss <- ss_calc(income, tyw, i, n)
retire <- age + n - 2
#output$text1 <- renderText({
#  paste("Based on a savings rate of", input$savings_rate, ",",
#        "you will be able to retire at", retire, ".")
#})
while(n < end - age + 2){
taxable[n] <- taxable[n-1] * (1 + r) - expenses
rothIRA[n] <- rothIRA[n-1] * (1 +r)
n <- n + 1
}
df <- data.frame(years, taxable, rothIRA, tradIRA)
plot(years, assets, log = "", type = "l", col = "blue",
xlab = "Age", ylab = "Assets", main="Assets over Time")
abline(v=retire,col=3,lty=3)
source('G:/Codes/R/sample.R', echo=TRUE)
age <- 30
s <- (60000-18000)/60000 #savings rate
end <- 65 #Life expectancy
years <- c(age:end)
income <- seq(age:end)
income[1] <- 60000 #post tax income
expenses <- seq(age:end)
expenses[1] <- income[1] * (1 -s) #expenses
taxable <- seq(age:end)
taxable[1] <- 0 #current investments
tradIRA <- seq(age:end)
tradIRA[1] <- 0 #initial traditional IRA
rothIRA <- seq(age:end)
rothIRA[1] <- 0 #initial Roth IRA
r <- 7 / 100 #returns
i <- 0 /100  #inflation
#tyw <- as.numeric(input$years_worked) #total years worked
n <- 2
l <- length(income)
for(k in 2:l){
income[k] <- income[k-1] * (1 + i)
expenses[k] <- income[k-1] * (1 - s)
}
while( n < 12){
taxable[n] <- taxable[n-1] * (1 + r) + income -
expenses - getTotal() - maxIRA
rothIRA[n] <- rothIRA[n-1] * (1 +r) + maxIRA
n <- n + 1
}
#Calculate Social Security
#ss <- ss_calc(income, tyw, i, n)
retire <- age + n - 2
#output$text1 <- renderText({
#  paste("Based on a savings rate of", input$savings_rate, ",",
#        "you will be able to retire at", retire, ".")
#})
while(n < end - age + 2){
taxable[n] <- taxable[n-1] * (1 + r) - expenses
rothIRA[n] <- rothIRA[n-1] * (1 +r)
n <- n + 1
}
df <- data.frame(years, taxable, rothIRA, tradIRA)
plot(years, taxable, log = "", type = "l", col = "blue",
xlab = "Age", ylab = "Assets", main="Assets over Time")
abline(v=retire,col=3,lty=3)
warnings()
shiny::runApp('RothVTrad')
df
source('G:/Codes/R/sample.R', echo=TRUE)
warnings
warnings()
df
source('G:/Codes/R/sample.R', echo=TRUE)
age <- 30
s <- (60000-18000)/60000 #savings rate
end <- 65 #Life expectancy
years <- c(age:end)
income <- seq(age:end)
income[1] <- 60000 #post tax income
expenses <- seq(age:end)
expenses[1] <- income[1] * (1 -s) #expenses
taxable <- seq(age:end)
taxable[1] <- 0 #current investments
maxIRA <- 5500 #IRA Contribution Limit
tradIRA <- seq(age:end)
tradIRA[1] <- 0 #initial traditional IRA
rothIRA <- seq(age:end)
rothIRA[1] <- 0 #initial Roth IRA
r <- 7 / 100 #returns
i <- 0 /100  #inflation
#tyw <- as.numeric(input$years_worked) #total years worked
n <- 2
l <- length(income)
for(k in 2:l){
income[k] <- income[k-1] * (1 + i)
expenses[k] <- income[k-1] * (1 - s)
}
while( n < 12){
taxable[n] <- taxable[n-1] * (1 + r) + income -
expenses - maxIRA #- getTotal()
rothIRA[n] <- rothIRA[n-1] * (1 +r) + maxIRA
n <- n + 1
}
#Calculate Social Security
#ss <- ss_calc(income, tyw, i, n)
retire <- age + n - 2
#output$text1 <- renderText({
#  paste("Based on a savings rate of", input$savings_rate, ",",
#        "you will be able to retire at", retire, ".")
#})
while(n < end - age + 2){
taxable[n] <- taxable[n-1] * (1 + r) - expenses
rothIRA[n] <- rothIRA[n-1] * (1 +r)
n <- n + 1
}
df <- data.frame(years, taxable, rothIRA, tradIRA)
ggplot(data = df, aes(x="Assets over Time", y = "Assets"))
#plot(years, taxable, log = "", type = "l", col = "blue",
#     xlab = "Age", ylab = "Assets", main="Assets over Time")
#abline(v=retire,col=3,lty=3)
source('G:/Codes/R/sample.R', echo=TRUE)
df
source('G:/Codes/R/sample.R', echo=TRUE)
df
data.frame(years)
data.frame(taxable)
source('G:/Codes/R/sample.R', echo=TRUE)
warnings()
taxable
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
warnings()
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
str(df)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
df
?mpg
summary(mpg)
ggplot(mpg, aes(displ, hwy) + geom_point())
p <_ ggplot(mpg, aes(displ, hwy))
p <- ggplot(mpg, aes(displ, hwy))
p
p + geom_point()
ggplot(mpg, aes(displ, hwy)) + geom_point()
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
matplot(df)
?matplot
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
source('G:/Codes/R/sample.R', echo=TRUE)
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
?multiplot
?multiplot()
shiny::runApp('RothVTrad')
shiny::runApp('RothVTrad')
shiny::runApp('G:/My Documents/AFE/MMTaxCalc')
shiny::runApp('G:/My Documents/AFE/MMTaxCalc')
shiny::runApp('G:/My Documents/AFE/MMTaxCalc')
shiny::runApp('G:/My Documents/AFE/MMTaxCalc')
shiny::runApp('G:/My Documents/AFE/MMTaxCalc')
shiny::runApp('G:/My Documents/AFE/MMTaxCalc')
shiny::runApp('G:/My Documents/AFE/MMTaxCalc')
shiny::runApp('G:/My Documents/AFE/MMTaxCalc')
setwd("G:/My Documents/AFE/MMTaxCalc")
source("stateTaxAlt.R")
hasLocality("Maryland")
hasLocality("California")
source("stateTaxAlt.R")
hasLocality("California")
hasLocality("Maryland")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
localTax <- tbl_df(read.csv("localities.csv", stringsAsFactors=FALSE))
localTax
localTax$state <- gsub(" \\(.+\\)", "", localTax$state, perl=TRUE)
localTax$state <- gsub("\\(.+\\)", "", localTax$state, perl=TRUE)
localTax <- tbl_df(read.csv("localities.csv", stringsAsFactors=FALSE))
locatTax
localTax
localTax <- tbl_df(read.csv("localities.csv", stringsAsFactors=FALSE))
localTax$state <- gsub(" \\(.+\\)", "", localTax$state, perl=TRUE)
localTax$state <- gsub("\\(.+\\)", "", localTax$state, perl=TRUE)
library(dplyr)
localTax$state <- gsub(" \\(.+\\)", "", localTax$state, perl=TRUE)
localTax <- tbl_df(read.csv("localities.csv", stringsAsFactors=FALSE))
localTax$state <- gsub(" \\(.+\\)", "", localTax$state, perl=TRUE)
localTax$state <- gsub("\\(.+\\)", "", localTax$state, perl=TRUE)
localTAx
localTax
localTax_1 <- localTax[localTax$state == state,]
localTax_2 <- localTax_1[localTax_1$locality == state,]
shiny::runApp()
shiny::runApp()
localTax <- tbl_df(read.csv("localTax.csv", stringsAsFactors=FALSE))
localTax$state <- gsub(" \\(.+\\)", "", localTax$state, perl=TRUE)
localTax$state <- gsub("\\(.+\\)", "", localTax$state, perl=TRUE)
localTax <- tbl_df(read.csv("localities.csv", stringsAsFactors=FALSE))
localTax$state <- gsub(" \\(.+\\)", "", localTax$state, perl=TRUE)
localTax$state <- gsub("\\(.+\\)", "", localTax$state, perl=TRUE)
localTax <- tbl_df(read.csv("localities.csv", stringsAsFactors=FALSE))
localTax$state <- gsub(" \\(.+\\)", "", localTax$state, perl=TRUE)
localTax$state <- gsub("\\(.+\\)", "", localTax$state, perl=TRUE)
localTax_1 <- localTax[localTax$state == state,]
localTax_2 <- localTax_1[localTax_1$locality == state,]
state <- "Maryland"
localTax_1 <- localTax[localTax$state == state,]
localTax_2 <- localTax_1[localTax_1$locality == state,]
locatTax_2
localTax_2
localTax_2$rate
localTax
localTax$state == "Marylan"
localTax$state == "Maryland"
localTax_1 <- localTax[localTax$state == state,]
locality <- "Montgomery County"
localTax_1 <- localTax[localTax$state == state,]
localTax_2 <- localTax_1[localTax_1$locality == locality,]
locatTax_2
localTax_2
localTax_2$rate
localTax_2$rate * 50000
localTax_2$rate[1] * 50000
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
state <- "Alabama"
locality <- "Bessemer"
localTax <- tbl_df(read.csv("localities.csv", stringsAsFactors=FALSE))
localTax$state <- gsub(" \\(.+\\)", "", localTax$state, perl=TRUE)
localTax$state <- gsub("\\(.+\\)", "", localTax$state, perl=TRUE)
localTax_1 <- localTax[localTax$state == state,]
localTax_2 <- localTax_1[localTax_1$locality == locality,]
localTax_2
shiny::runApp()
localTax_2$rate[1] * 500000
hasLocality(state)
localTax("Alabama","Bessemer",50000)
localTax("Alabama","Birmingham",50000)
localTax("Alabama","Gadsden",50000)
localTax("Alabama","Other",50000)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
localTax <- tbl_df(read.csv("localTax.csv", stringsAsFactors=FALSE))
localTax$state <- gsub(" \\(.+\\)", "", localTax$state, perl=TRUE)
localTax$state <- gsub("\\(.+\\)", "", localTax$state, perl=TRUE)
localTax_1 <- localTax[localTax$state == state,]
state
locatTax_1
localTax_1
localTax <- tbl_df(read.csv("localities.csv", stringsAsFactors=FALSE))
localTax$state <- gsub(" \\(.+\\)", "", localTax$state, perl=TRUE)
localTax$state <- gsub("\\(.+\\)", "", localTax$state, perl=TRUE)
localTax_1 <- localTax[localTax$state == state,]
localTax_1
localTax_1$locality
localityList("Alabama")
source("StateTaxAlt.R")
localityList("Alabama")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
source("stateTaxAlt")
source("stateTaxAlt.R")
hasLocality("Alaska")
shiny::runApp()
shiny::runApp()
hasLocality("Alaska")
hasLocality("Alabama")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
